component_type = "WGD"; 
property = "load from file";
setting = 1;

function edit_node(base_element, component_type, property, setting) {
    #setting to the input base_element
    groupscope(base_element);
    a = splitstring(getdata, endl);
    #running list of compound elements to run edit_node on again    
    running_list = "";
    #for each element in base_element
    for (i = 1:length(a)) {
        #what is the name of the element? below
        element = a{i};
        if (getnamed(element, "PREFIX") == "COMPOUND") {
            #go into the new compound element node
            new_node = base_element + "::" + element;
            #edit_node(new_node, old_dir, new_dir);
            
            #compile the compound ones to check later in a string
            running_list = running_list + new_node + endl;
        } else {
            if (getnamed(element, "PREFIX") == component_type) {
                setnamed(element, property, setting); 
            }
        }
    }
    return running_list;
}

#must include below because recursion doesn't work here
running_list = edit_node("::Root Element", component_type, property, setting);

b = splitstring(running_list, endl);
for (i = 1:length(b)) {
    extra = edit_node(b{i}, component_type, property, setting);
    ?"THERE IS EXTRA " + num2str(length(extra));
}